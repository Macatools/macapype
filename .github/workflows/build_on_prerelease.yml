name: (Prerelease) Build Pipy, Dockerhub image and test

on:
  release:
    types: [prereleased]

jobs:

  build-n-publish-testpypi:
    name: Build and publish Python to Test PyPI
    runs-on: ubuntu-latest

    permissions:
      id-token: write

    environment:
      name: testpypi
      url: https://test.pypi.org/p/macapype

    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.10.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.5
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  docker-build:
    name: Build Docker image and Push to Docker Hub
    needs: build-n-publish-testpypi
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: macatools/macapype

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_testpypi_nomcr
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

       - name: Clean images
         run: |
            docker images purge

            docker rm -vf $(docker ps -aq)

            docker rmi -f $(docker images -aq)

            docker system prune -a

  run-pretest-ants-macaque:
    name: Running all existing pipelines in macapype_CI_v2.1.zip (ANTS macaque)
    needs:  docker-build
    runs-on: ubuntu-latest
    timeout-minutes: 1440

    steps:
      - name: Pull latest docker image
        run:
            docker pull macatools/macapype:latest

      - name: Download dataset
        run: |

            curl https://amubox.univ-amu.fr/public.php/dav/files/CoSC5w5ATZextme --output macapype_CI_v2.1.zip

            unzip -o macapype_CI_v2.1.zip -d macapype_CI_v2.1

            pwd
            echo ""

            ls macapype_CI_v2.1
            echo ""

            ls macapype_CI_v2.1/cerimed_macaque
            echo ""

      - name: Running test pipeline cerimed_macaque ANTS_prep T1 T2
        run: |
            docker run -i -v /home/runner/work/macapype/macapype/macapype_CI_v2.1:/data macatools/macapype:latest segment_pnh -data /data/cerimed_macaque/ -out /data/cerimed_macaque/results -soft ANTS_quick_robustreg -species macaque -sub Stevie -ses 01 -deriv -pad -dt T1 T2 -nprocs 1

            ls /home/runner/work/macapype/macapype/macapype_CI_v2.1/cerimed_macaque/results/

            ls /home/runner/work/macapype/macapype/macapype_CI_v2.1/cerimed_macaque/results/derivatives/

            ls /home/runner/work/macapype/macapype/macapype_CI_v2.1/cerimed_macaque/results/derivatives/macapype_ants/

            ls /home/runner/work/macapype/macapype/macapype_CI_v2.1/cerimed_macaque/results/derivatives/macapype_ants/sub-Stevie/ses-01/anat/
            echo ""

      - name: Cleaning dataset
        run:
            sudo rm -rf /home/runner/work/macapype/macapype/macapype_CI_v2.1/cerimed_macaque/results

      - name: Clean images
        run: |
            docker images purge

            docker rm -vf $(docker ps -aq)

            docker rmi -f $(docker images -aq)

            docker system prune -a

