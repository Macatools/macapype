name: (Prerelease) Build Pipy, Dockerhub image and test

on:
  release:
    types: [prereleased]

jobs:

  build-n-publish-testpypi:
    name: Build and publish Python to Test PyPI
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.10.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.5
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

  docker-build:
    name: Build Docker image and Push to Docker Hub
    needs: build-n-publish-testpypi
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: macatools/macapype

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile_testpypi
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  run-test:
    name: Running all existing pipelines in macapype_CI.zip
    needs: docker-build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Pull latest docker image
        run:
            docker pull macatools/macapype:latest

      - name: Download dataset
        run: |
            wget --no-check-certificate --content-disposition  "https://amubox.univ-amu.fr/public.php?service=files&t=KJ2L5j6L6orPXxM&download" -O macapype_CI.zip
            unzip -o macapype_CI.zip -d macapype_CI

      - name: Running all test pipelines
        run: |
            pwd
            echo ""
            ls macapype_CI
            echo ""
            ls macapype_CI/macaque_prime-de
            echo ""

            docker run -i -v /home/ubuntu/actions-runner/_work/macapype/macapype/macapype_CI:/data macatools/macapype:latest segment_pnh -data /data/marmo-marmobrain -out /data/marmo-marmobrain/results -soft ANTS -species marmo -indiv /data/marmo-marmobrain/indiv_params_segment_marmo.json -sub 8034 -ses 01 -deriv -pad

      - name: Cleaning dataset
        run:
            sudo rm -rf /home/ubuntu/actions-runner/_work/macapype/macapype/macapype_CI
            sudo rm -f /home/ubuntu/actions-runner/_work/macapype/macapype/macapype_CI.zip

